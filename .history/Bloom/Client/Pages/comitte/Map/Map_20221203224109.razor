@using Bloom.Client
@using Bloom.Shared
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Components
@using System.Text
@using System.IO
@using System.Xml.Serialization

@page "/Map"

@inject NavigationManager nV

@implements IAsyncDisposable
<h2>Map</h2>
<!--選択階マップ-->
<div class="tabs">

</div>
<!--各団体リンク集-->
<div class="inside">
    @if (floors != null)
    {
        @foreach (var flooritems in floors)
        {
            <section class="floors">
                <h1>@flooritems.floorTitle</h1>
                <div  class="mapTile">
                    @foreach (var company in flooritems.groups)
                    {
                        @if (company.isWide)
                        {
                            <div class="example-1 card">
				                <div class="wide">
					                <img src="@company.posterUrl" class="thumbnail"/>
					                <div class="date_01">
						                <span class="day">@company.location</span>
						                <span class="month"></span>
					                </div>
					                <div class="data_01">
						                <div class="content">
							                <p class="card_maintitle card_href_05">@company.name</p>
							                <p class="text">@company.comment</p>
							                <div style = "width: 100%; text-align: center; margin: 2rem 0;">
                                                <a href="@("/Company/" + company.id)" class="gobtn">Gothis page</a>
							                </div>
						                </div>
					                </div>
				                </div>
                            </div>
                        }
                        else
                        {
                            <a href="@("/Company/" + company.id)" class="example-1 card">
                                <div class="wrapper" style="background: url(@company.posterUrl) 20% 1%/cover no-repeat;">
                                    <div class="date">
                                    <span class="day">@company.location</span>
                                    <span class="month"></span>
                                    </div>
                                    <div class="data">
                                        <div class="content">
                                            <p class="card_maintitle card_href_05">@company.name</p>
                                            <p class="text">@company.comment</p>
                                        </div>
                                    </div>
                                </div>
                            </a>
                        }
                    }
                </div>
            </section>
        }

    }
    else
    {
        <h1>お探しの階に出店しているブースはございません。</h1>
    }
</div>


@code{
    Dictionary<Building,byte[]> Buildings = new Dictionary<Building, byte[]>();
    private Building mapId = Building.Gernal;
    private byte floor = 0;
    private HubConnection? hubConnection = null;
    private Dictionary<Building,Floor[]>? floors = null;


    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(nV.ToAbsoluteUri("/MapHub"))
            .Build();

        hubConnection.On<string>("ReceiveFloor", async (message) =>
        {
            var Floor = new Floor();
            await Floor.ConvertFromJson(message);
            
        });

        await hubConnection.StartAsync();
    }

    ///リンク
    public string Jump(string id)
    {
        return nV.ToAbsoluteUri($"/Company/" + id).AbsoluteUri;
    }
    public async ValueTask DisposeAsync()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();
        }
    }
}